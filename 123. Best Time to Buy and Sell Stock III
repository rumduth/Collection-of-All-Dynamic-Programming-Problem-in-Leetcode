Time: O(n)
Space: O(n)

/**
 * @param {number[]} prices
 * @return {number}
 */
var maxProfit = function(prices) {
    let n = prices.length;
    let buy1 = new Array(n).fill(0);
    let buy2 = new Array(n).fill(0);
    let sell1 = new Array(n).fill(0);
    let sell2 = new Array(n).fill(0);
    buy1[0] = -prices[0];
    buy2[0] = -Infinity;
    for(let i = 1; i < n; i++){
        buy1[i]  = Math.max(buy1[i - 1], -prices[i]);
        sell1[i] = Math.max(buy1[i - 1] + prices[i], sell1[i - 1]);
        buy2[i]  = Math.max(sell1[i - 1] - prices[i], buy2[i - 1]);
        sell2[i] = Math.max(buy2[i - 1] + prices[i], sell2[i - 1]);
    }
    return Math.max(sell1.at(-1),sell2.at(-1));
};
