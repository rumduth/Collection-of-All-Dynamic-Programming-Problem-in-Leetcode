Time: O(n)
Space: O(n)

/**
 * @param {number[]} nums
 * @return {number}
 */
var rob = function(nums) {
    let n = nums.length;
    if(n === 1) return nums[0];
    function dfs(arr){
        let n = arr.length;
        let dp = new Array(n + 1).fill(0);
        dp[1] = arr[0];
        for(let i = 2; i <= n; i++) dp[i] = Math.max(dp[i-2] + arr[i-1], dp[i-1]);
        return dp.at(-1);
    }

    return Math.max(dfs(nums.slice(1)), dfs(nums.slice(0,-1)));
};
