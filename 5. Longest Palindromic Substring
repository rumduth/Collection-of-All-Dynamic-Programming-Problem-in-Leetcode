Description: Given a string s, return the longest palindromic substring in s.
Time: O(N^2)
Space: O(N^2)

/**
 * @param {string} s
 * @return {string}
 */
var longestPalindrome = function(s) {
    let n = s.length;
    if(n === 1) return s;
    let start = 0;
    let maxLength = 1;
    let dp = Array.from({length: n}, () => new Array(n).fill(true));
    for(let i = n - 2; i >= 0; i--){
        for(let j = i + 1; j < n; j++){
            dp[i][j] = (s[i] === s[j] && dp[i+1][j-1]);
            if(dp[i][j] && j - i + 1 > maxLength){
                maxLength = j - i + 1;
                start = i;
            }
        }
    }
    return s.slice(start, start + maxLength);
};
